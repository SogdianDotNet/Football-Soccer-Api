// <auto-generated />
using System;
using FL.Data.Domain.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace FL.Data.Domain.Context.Migrations
{
    [DbContext(typeof(FootballObjectContext))]
    partial class FootballObjectContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("FL.Data.Domain.Entities.Authentication.ApiKeyEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("ApiKey")
                        .IsRequired();

                    b.Property<string>("Username")
                        .IsRequired();

                    b.Property<DateTime>("ValidUntilDateUtc");

                    b.HasKey("Id");

                    b.ToTable("ApiKeys");
                });

            modelBuilder.Entity("FL.Data.Domain.Entities.CountryEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name");

                    b.Property<string>("ShortName");

                    b.HasKey("Id");

                    b.ToTable("Countries");
                });

            modelBuilder.Entity("FL.Data.Domain.Entities.LeagueEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CountryEntityId");

                    b.Property<string>("Name");

                    b.Property<int>("SeasonId");

                    b.HasKey("Id");

                    b.HasIndex("CountryEntityId");

                    b.HasIndex("SeasonId");

                    b.ToTable("Leagues");
                });

            modelBuilder.Entity("FL.Data.Domain.Entities.MatchEntity", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AwayTeamId");

                    b.Property<int>("GoalsAway");

                    b.Property<int>("GoalsHome");

                    b.Property<int>("HomeTeamId");

                    b.Property<int?>("LeagueEntityId");

                    b.HasKey("Id");

                    b.HasIndex("AwayTeamId");

                    b.HasIndex("HomeTeamId");

                    b.HasIndex("LeagueEntityId");

                    b.ToTable("Matches");
                });

            modelBuilder.Entity("FL.Data.Domain.Entities.PlayerEntity", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Firstname");

                    b.Property<string>("Lastname");

                    b.Property<int>("NationalityId");

                    b.Property<int>("TeamId");

                    b.HasKey("Id");

                    b.HasIndex("NationalityId");

                    b.HasIndex("TeamId");

                    b.ToTable("Players");
                });

            modelBuilder.Entity("FL.Data.Domain.Entities.SeasonEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("FromDate");

                    b.Property<DateTime>("ToDate");

                    b.HasKey("Id");

                    b.ToTable("Seasons");
                });

            modelBuilder.Entity("FL.Data.Domain.Entities.TeamEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("LeagueId");

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.HasIndex("LeagueId");

                    b.ToTable("Teams");
                });

            modelBuilder.Entity("FL.Data.Domain.Entities.LeagueEntity", b =>
                {
                    b.HasOne("FL.Data.Domain.Entities.CountryEntity")
                        .WithMany("Leagues")
                        .HasForeignKey("CountryEntityId");

                    b.HasOne("FL.Data.Domain.Entities.SeasonEntity", "Season")
                        .WithMany("Leagues")
                        .HasForeignKey("SeasonId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("FL.Data.Domain.Entities.MatchEntity", b =>
                {
                    b.HasOne("FL.Data.Domain.Entities.TeamEntity", "AwayTeam")
                        .WithMany("AwayMatches")
                        .HasForeignKey("AwayTeamId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("FL.Data.Domain.Entities.TeamEntity", "HomeTeam")
                        .WithMany("HomeMatches")
                        .HasForeignKey("HomeTeamId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("FL.Data.Domain.Entities.LeagueEntity")
                        .WithMany("Matches")
                        .HasForeignKey("LeagueEntityId");
                });

            modelBuilder.Entity("FL.Data.Domain.Entities.PlayerEntity", b =>
                {
                    b.HasOne("FL.Data.Domain.Entities.CountryEntity", "Nationality")
                        .WithMany()
                        .HasForeignKey("NationalityId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("FL.Data.Domain.Entities.TeamEntity", "Team")
                        .WithMany("Players")
                        .HasForeignKey("TeamId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("FL.Data.Domain.Entities.TeamEntity", b =>
                {
                    b.HasOne("FL.Data.Domain.Entities.LeagueEntity", "League")
                        .WithMany("Teams")
                        .HasForeignKey("LeagueId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
